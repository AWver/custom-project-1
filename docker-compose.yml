# OpenRemote v3
#
# Profile for deploying the custom stack; uses deployment-data named volume
# to expose customisations to the manager and keycloak images. To run this profile you need to specify the following
# environment variables:
#
#    OR_ADMIN_PASSWORD - Initial admin user password
#    OR_HOST - FQDN hostname of where this instance will be exposed (localhost, IP address or public domain)
#    DEPLOYMENT_VERSION - Tag to use for deployment image (must match the tag used when building the deployment image)
#
# Please see openremote/profile/deploy.yml for configuration details for each service.
#
# To perform updates, build code and prepare Docker images:
#
#   ./gradlew clean installDist
#
# Then recreate deployment image:
#
#  DEPLOYMENT_VERSION=$(git rev-parse --short HEAD)
#  MANAGER_VERSION=$(cd openremote; git rev-parse --short HEAD; cd ..)
#  docker build -t openremote/manager:$MANAGER_VERSION ./openremote/manager/build/install/manager/
#  docker build -t openremote/custom-deployment:$DEPLOYMENT_VERSION ./deployment/build/
#  docker-compose -p custom down
#  docker volume rm custom_deployment-data
#  Do the following volume rm command if you want a clean install (wipe all existing data)
#  docker volume rm custom_postgresql-data
#  OR_ADMIN_PASSWORD=secret OR_HOST=my.domain.com docker-compose -p custom up -d
#
# All data is kept in volumes. Create a backup of the volumes to preserve data.
#
version: '2.4'

volumes:
  proxy-data:
  deployment-data:
  postgresql-data:
  temp-data:

services:

  # This service will only populate an empty volume on startup and then exit.
  # If the volume already contains data, it exits immediately.
  deployment:
    image: openremote/deployment:${DEPLOYMENT_VERSION?DEPLOYMENT_VERSION must be set}
    volumes:
      - deployment-data:/deployment

  proxy:
    image: openremote/proxy:${PROXY_VERSION:-2.5.0.3}
    restart: always
    depends_on:
      manager:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"
    volumes:
      - proxy-data:/deployment
      - deployment-data:/data
    environment:
      LE_EMAIL: ${OR_EMAIL_ADMIN:-}
      DOMAINNAME: ${OR_HOST?OR_HOST must be set}
      # USE A CUSTOM PROXY CONFIG - COPY FROM https://github.com/openremote/proxy/blob/main/haproxy.cfg
      #HAPROXY_CONFIG: '/data/proxy/haproxy.cfg'

  postgresql:
    image: openremote/postgresql:${POSTGRESQL_VERSION:-14.1.0.1}
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - temp-data:/tmp

  keycloak:
    image: openremote/keycloak:${KEYCLOAK_VERSION:-16.0.0.0}
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - deployment-data:/deployment
    environment:
      KEYCLOAK_PASSWORD: ${OR_ADMIN_PASSWORD:?OR_ADMIN_PASSWORD must be set}
      KEYCLOAK_FRONTEND_URL: https://${OR_HOST?OR_HOST must be set}/auth

  manager:
    image: openremote/manager:${MANAGER_VERSION:-latest}
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    depends_on:
      keycloak:
        condition: service_healthy
    volumes:
      - temp-data:/tmp
      - deployment-data:/deployment
      # Map data is stored local on host
      - /deployment.local:/deployment.local
    environment:
      # Here are some typical environment variables you want to set
      # see openremote/profile/deploy.yml for details
      OR_ADMIN_PASSWORD: ${OR_ADMIN_PASSWORD?OR_ADMIN_PASSWORD must be set}
      OR_SETUP_TYPE: # Typical values to support are staging and production
      OR_SETUP_RUN_ON_RESTART:
      OR_EMAIL_HOST:
      OR_EMAIL_USER:
      OR_EMAIL_PASSWORD:
      OR_EMAIL_FROM:
      OR_EMAIL_ADMIN:
      OR_HOST: ${OR_HOST?OR_HOST must be set}
      OR_DEV_MODE: ${OR_DEV_MODE:-false}
      #MAP_TILES_PATH: '/deployment.local/efs/mapdata.mbtiles'
